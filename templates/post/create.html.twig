{% extends 'base.html.twig' %}

{% block title %}Rédiger un article{% endblock %}
{% block page_title %}Rédiger un article{% endblock %}

{% block content %}
    {{ form(form) }}
{% endblock %}

{% block scripts %}
    {{ parent() }}
    <script src="https://cdn.ckeditor.com/4.22.1/standard/ckeditor.js"></script>
    <script>
        CKEDITOR.replace('post_content');

        /**
         * Permet de générer un slug à partir d'une string.
         * https://mhagemann.medium.com/the-ultimate-way-to-slugify-a-url-string-in-javascript-b8e4a0d849e1
         * @param string
         * @returns {string}
         */
        function slugify(string) {
            const a = 'àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìıİłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż·/_,:;'
            const b = 'aaaaaaaaaacccddeeeeeeeegghiiiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------'
            const p = new RegExp(a.split('').join('|'), 'g')

            return string.toString().toLowerCase()
                .replace(/\s+/g, '-') // Replace spaces with -
                .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters
                .replace(/&/g, '-and-') // Replace & with 'and'
                .replace(/[^\w\-]+/g, '') // Remove all non-word characters
                .replace(/\-\-+/g, '-') // Replace multiple - with single -
                .replace(/^-+/, '') // Trim - from start of text
                .replace(/-+$/, '') // Trim - from end of text
        }

        /**
         * Permet de générer automatiquement,
         * l'alias de l'article à partir du titre.
         */
        document.querySelector('#post_title')
            .addEventListener('input', function () {
                document.querySelector('#post_slug').value = slugify(this.value);
            });

    </script>
{% endblock %}
